version: "3.9"

networks:
  default:
    driver: bridge
  traefik_proxy:
    name: traefik-net
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.90.0/24

services:
  # traefik.domain.local
  # TODO: ns.domain.local/traefik
  traefik:
    container_name: traefik
    image: traefik:2.10
    hostname: traefik
    ## Always restart the container if it stops. If it's manually stopped, it's restarted only when Docker daemon restarts or the container itself is manually restarted.
    restart: always
    networks: 
      - traefik_proxy
    security_opt:
      - no-new-privileges:true
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      ### API
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      #- --serversTransport.insecureSkipVerify=true
      ### Entry Points
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entrypoints.https.forwardedHeaders.trustedIPs=$LOCAL_IPS
      ### Logs
      - --log=true
      - --log.filePath=/logs/traefik.log
      - --log.level=ERROR # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=204-299,400-499,500-599
      ### Docker
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock # Use Docker Socket Proxy for improved security
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=traefik_proxy
      - --providers.docker.swarmMode=false
      ### Rules
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
      - --providers.file.watch=true # Only works on top level files in the rules folder
      ### HTTPS
      - --entrypoints.https.http.tls.options=tls-opts@file
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # TODO: Use Docker Socket Proxy instead for improved security
      - $DOCKERDIR/app/traefik/rules:/rules
      - $DOCKERDIR/shared:/shared
      - $DOCKERDIR/logs:/logs
    environment:
      - TZ=$TZ
      - HTPASSWD_FILE=/shared/.htpasswd
    labels:
      - "traefik.enable=true"
      ### HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      ### HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME`)"
      - "traefik.http.routers.traefik-rtr.tls={}"
      ### Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=chain-no-auth@file"
      ### Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"

  # whoami.domain.local
  whoami:
    container_name: whoami
    image: traefik/whoami
    hostname: whoami
    networks:
      - traefik_proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      ### Routers
      - "traefik.http.routers.whoami-rtr.entrypoints=https"
      - "traefik.http.routers.whoami-rtr.rule=Host(`whoami.$DOMAINNAME`)"
      - "traefik.http.routers.whoami-rtr.tls={}"
      ### Middlewares
      - "traefik.http.routers.whoami-rtr.middlewares=chain-no-auth@file"
      ### Services
      - "traefik.http.routers.whoami-rtr.service=whoami-svc"
      - "traefik.http.services.whoami-svc.loadbalancer.server.port=80"

  # ns.domain.local
  pihole:
    ## TODO: Add security_opt:no-new-privileges:true when pihole can run without sudo
    container_name: pihole
    image: pihole/pihole:latest
    hostname: pi-hole
    ports:
      # port 80 will go through Traefik
      - target: 53
        published: 53
        protocol: tcp
        mode: host
      - target: 53
        published: 53
        protocol: udp
        mode: host
    networks:
      - traefik_proxy
    dns:
      - 127.0.0.1
    depends_on:
      - unbound
    volumes:
      - $DOCKERDIR/app/pihole:/etc/pihole
      - $DOCKERDIR/app/dnsmasq.d:/etc/dnsmasq.d
      - $DOCKERDIR/logs:/var/log/pihole
      - $DOCKERDIR/logs/error-pihole.log:/var/log/lighttpd/error-pihole.log
    restart: always
    environment:
      - TZ=$TZ
      - WEBPASSWORD=$PIHOLEPASS
      - VIRTUAL_HOST=ns.$DOMAINNAME
      - FTLCONF_LOCAL_IPV4=192.168.1.2
      - PIHOLE_UID=1000
      - PIHOLE_GID=1000
      - PIHOLE_DNS_=unbound # Use unbound container as upstream DNS
      - QUERY_LOGGING=false
    labels:
      - "traefik.enable=true"
      ### Routers
      - "traefik.http.routers.pihole-rtr.entrypoints=https"
      - "traefik.http.routers.pihole-rtr.rule=Host(`ns.$DOMAINNAME`)"
      - "traefik.http.routers.pihole-rtr.tls={}"
      ### Middlewares
      - "traefik.http.routers.pihole-rtr.middlewares=chain-no-auth@file"
      ### Services
      - "traefik.http.routers.pihole-rtr.service=pihole-svc"
      - "traefik.http.services.pihole-svc.loadbalancer.server.port=80"

  # No external access
  unbound:
    container_name: unbound
    image: mvance/unbound-rpi:latest
    hostname: unbound
    networks:
      traefik_proxy:
        # Use a static IP to improve pi-hole upstream stats
        ipv4_address: 192.168.90.123
    security_opt:
      - no-new-privileges:true
    ports:
      - 53/tcp
      - 53/udp
    volumes:
      - $DOCKERDIR/app/unbound/unbound.conf:/opt/unbound/etc/unbound/unbound.conf
      - $DOCKERDIR/app/unbound/a-records.conf:/opt/unbound/etc/unbound/a-records.conf
      - $DOCKERDIR/logs/unbound.log:/opt/unbound/etc/unbound/unbound.log
    restart: always

  # ns.domain.local/portainer
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    hostname: portainer
    networks:
      - traefik_proxy
    security_opt:
      - no-new-privileges:true
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/app/portainer:/data
    environment:
      - TZ=$TZ
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.portainer-rtr.entrypoints=https"
      - "traefik.http.routers.portainer-rtr.rule=Host(`ns.$DOMAINNAME`) && PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer-rtr.tls={}"
      ## Middlewares
      - "traefik.http.middlewares.strip-portainer-path.stripprefix.prefixes=/portainer"
      - "traefik.http.routers.portainer-rtr.middlewares=chain-no-auth@file,strip-portainer-path"
      ## HTTP Services
      - "traefik.http.routers.portainer-rtr.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"

